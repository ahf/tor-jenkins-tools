#!/bin/sh

set -x
set -u
set -e

dn=$(dirname "$0")
branch0=${dn#*/tor-ci-linux-}
branch=${branch0%-extra-arm}
if [ "$branch0" = "$dn" ] ||
   [ "$branch" = "$branch0" ]; then
  echo >&2 "Did not find branch from dirname $dn -> $branch0 -> $branch)"
  exit 1
fi

echo "Think we are in branch $branch."

fatal_warnings=1
case "$branch" in
  0.2.8)
    case "$SUITE" in
      sid|buster|artful|bionic|cosmic)
        fatal_warnings=0
        ;;
    esac
    ;;
esac
default_flags=""
default_flags="--disable-silent-rules"
if [ "$fatal_warnings" -gt 0 ]; then default_flags="$default_flags --enable-gcc-warnings"; fi

configure_flags=${configure_flags:-"$default_flags"}

! [ -e ~/.tor-jenkins-makeflags ] || . ~/.tor-jenkins-makeflags

(cd tor && ./autogen.sh)
rm -rf build-tree-tor
mkdir build-tree-tor
cd build-tree-tor

echo "=== [build] running configure ==="
../tor/configure $configure_flags && rc=0 || rc=$?
if [ "$rc" != 0 ]; then
  echo "=== [build] FAILED: configure ==="
  echo >&2 "============================="
  echo >&2 "Configure failed.  Trying to cat config.log."
  echo >&2 "============================="
  cat config.log || true
  exit $rc
fi

echo "=== [build] running make ==="
make -k ${TOR_JENKINS_MAKEFLAGS:-} && rc=0 || rc=$?
if [ "$rc" != 0 ]; then
  echo >&2 "============================="
  echo >&2 "make -k failed.  Re-running without -k to maybe see the error near the end of the build-log."
  echo >&2 "============================="
  make ${TOR_JENKINS_MAKEFLAGS:-}
  echo "=== [build] FAILED: make ==="
  exit $rc
fi

echo "=== [build] running check ==="
VERBOSE=yes make -k ${TOR_JENKINS_MAKEFLAGS:-} check && rc=0 || rc=$?
if [ "$rc" != 0 ]; then
  echo "=== [build] FAILED: check ==="
  exit $rc
fi
