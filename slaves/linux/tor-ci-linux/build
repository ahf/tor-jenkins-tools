#!/bin/bash
set -x
set -e

if [ -z "${branch:-}" ]; then
  dn=$(dirname "$0")
  dn=$(basename "$dn")
  branch=${dn#tor-ci-linux-}
  if [ "$branch" = "$dn" ]; then
    case "$branch" in
      stem-tor-ci-base)
        :
        ;;
      *)
        echo >&2 "Did not find branch from dirname $dn"
        exit 1
    esac
  fi
fi

echo "Think we are in branch $branch."

fatal_warnings=1
case "$branch" in
  0.2.8)
    case "$SUITE" in
      sid|buster|artful|bionic|cosmic)
        fatal_warnings=0
        ;;
    esac
    ;;
esac
default_flags=""
default_flags="--disable-silent-rules"
if [ "$fatal_warnings" -gt 0 ]; then default_flags="$default_flags --enable-gcc-warnings"; fi

configure_flags=${configure_flags:-"$default_flags"}

! [ -e ~/.tor-jenkins-makeflags ] || . ~/.tor-jenkins-makeflags

(cd tor && ./autogen.sh)

set dummy ${configure_flags}
shift

echo "======================================================="
echo "== Running with configure $*"
echo "======================================================="

rm -rf build-tree-tor RESULT
mkdir build-tree-tor RESULT

(
cd build-tree-tor

echo "=== [build] running configure ==="
../tor/configure "$@" && rc=0 || rc=$?
if [ "$rc" != 0 ]; then
  echo "=== [build] FAILED: configure ==="
  echo >&2 "============================="
  echo >&2 "Configure failed.  Trying to cat config.log."
  echo >&2 "============================="
  cat config.log || true
  exit $rc
fi

echo "=== [build] running make ==="
make -k ${TOR_JENKINS_MAKEFLAGS:-} && rc=0 || rc=$?
if [ "$rc" != 0 ]; then
  echo >&2 "============================="
  echo >&2 "make -k failed.  Re-running without -k to maybe see the error near the end of the build-log."
  echo >&2 "============================="
  make ${TOR_JENKINS_MAKEFLAGS:-} || true
  exit $rc
fi

echo "=== [build] running check ==="
TOR_FUZZ_CORPORA=../fuzzing-corpora VERBOSE=yes make -k ${TOR_JENKINS_MAKEFLAGS:-} check && rc=0 || rc=$?
if [ "$rc" != 0 ]; then
  echo "=== [build] FAILED: check ==="
  exit $rc
fi

)

if [ -e build-tree-tor/src/or/tor ] ; then
  cp build-tree-tor/src/or/tor RESULT
elif [ -e build-tree-tor/src/app/tor ] ; then
  cp build-tree-tor/src/app/tor RESULT
else
  echo >&2 "Cannot find tor binary."
  exit 1
fi
rm -rf build-tree-tor
